name: build

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build corrosion
        run: |
          cmake -Scorrosion -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install
          cmake --build build --config Release
          cmake --install build --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: corrosion-win
          path: install/**/*

  release:
    runs-on: ubuntu-20.04
    needs: build
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Create git tag
        id: create-git-tag
        run: |
          tag="autobuild-$(date -u '+%Y-%m-%d-%H-%M')"
          git tag $tag
          git push origin $tag
          echo "::set-output name=TAG::$tag"
          echo "::set-output name=COMMIT::$(git --git-dir corrosion/.git rev-parse HEAD)"

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Prepare artifacts
        run: |
          echo "${{ steps.create-git-tag.outputs.COMMIT }}" > corrosion-win/COMMIT
          tar -czvf corrosion-win.tar.gz corrosion-win/*

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh release create ${{ steps.create-git-tag.outputs.TAG }} corrosion-win.tar.gz \
            -n "corrosion-rs/corrosion@${{ steps.create-git-tag.outputs.COMMIT }}"
